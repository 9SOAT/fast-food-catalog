---
openapi: 3.0.1
info:
  title: Fast Food Catalog API
  version: v0

servers:
  - url: /catalog
    description: Production server (uses live data)
  - url: /
    description: Local server (uses test data)
paths:
  '/products/{id}':
    get:
      description: Busca um produto pelo id
      tags:
        - Produtos
      operationId: findById
      parameters:
        - name: id
          description: ID do produto
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductView'
    put:
      description: Atualiza um produto pelo id
      tags:
        - Produtos
      operationId: updateProduct
      parameters:
        - name: id
          description: ID do produto
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductMutation'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductView'
    delete:
      description: Remove um produto pelo id. A remoção é logica, pois o produto não é removido do banco de dados.
      tags:
        - Produtos
      operationId: deleteProduct
      parameters:
        - name: id
          description: ID do produto
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
  /products:
    get:
      description: Busca paginada de produtos
      tags:
        - Produtos
      operationId: findAll
      parameters:
        - name: page
          description: Número da página
          in: query
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: size
          description: Quantidade de elementos por página
          in: query
          required: true
          schema:
            maximum: 50
            type: integer
            format: int32
        - name: status
          in: query
          required: true
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
              - ALL
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResultProductView'
    post:
      description: Cria um produto
      tags:
        - Produtos
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductMutation'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductView'
  /:
    get:
      description: Busca paginada de produtos ativos por categoria
      tags:
        - Catalogo
      operationId: getByCategory
      parameters:
        - name: category
          description: Categoria do produto
          in: query
          required: true
          schema:
            type: string
            enum:
              - SANDWICH
              - DRINK
              - SIDE_DISH
              - DESSERT
        - name: page
          description: Número da página
          in: query
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: size
          description: Quantidade de elementos por página
          in: query
          required: true
          schema:
            maximum: 50
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResultProductView'
  '/{id}':
    get:
      description: Busca um produto pelo id
      tags:
        - Catalogo
      operationId: getById
      parameters:
        - name: id
          description: ID do produto
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductView'
components:
  schemas:
    ProductMutation:
      required:
        - category
        - description
        - images
        - name
        - price
      type: object
      properties:
        name:
          type: string
          description: Nome do produto
        description:
          type: string
          description: Descrição do produto
        images:
          description: URLs das imagens do produto
          uniqueItems: true
          type: array
          items:
            type: string
        price:
          description: Preço do produto
          type: number
        category:
          description: Categoria do produto
          type: string
          enum:
            - SANDWICH
            - DRINK
            - SIDE_DISH
            - DESSERT
    ProductView:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        images:
          uniqueItems: true
          type: array
          items:
            type: string
        price:
          type: number
        category:
          type: string
          enum:
            - SANDWICH
            - DRINK
            - SIDE_DISH
            - DESSERT
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
    PageResultView:
      type: object
      properties:
        pageNumber:
          description: Número da página
          type: integer
          format: int32
        pageSize:
          description: Quantidade de elementos por página
          type: integer
          format: int32
        totalElements:
          description: Quantidade total de elementos
          type: integer
          format: int64
        totalPages:
          description: Quantidade total de páginas
          type: integer
          format: int32
    PageResultProductView:
      allOf:
        - $ref: '#/components/schemas/PageResultView'
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductView'